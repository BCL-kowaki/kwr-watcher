{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["turbopack:///[turbopack]/browser/dev/hmr-client/hmr-client.ts"],"sourcesContent":["/// <reference path=\"../../../shared/runtime-types.d.ts\" />\n/// <reference path=\"../../runtime/base/dev-globals.d.ts\" />\n/// <reference path=\"../../runtime/base/dev-protocol.d.ts\" />\n/// <reference path=\"../../runtime/base/dev-extensions.ts\" />\n\ntype SendMessage = (msg: any) => void\nexport type WebSocketMessage =\n  | {\n      type: 'turbopack-connected'\n    }\n  | {\n      type: 'turbopack-message'\n      data: Record<string, any>\n    }\n\nexport type ClientOptions = {\n  addMessageListener: (cb: (msg: WebSocketMessage) => void) => void\n  sendMessage: SendMessage\n  onUpdateError: (err: unknown) => void\n}\n\nexport function connect({\n  addMessageListener,\n  sendMessage,\n  onUpdateError = console.error,\n}: ClientOptions) {\n  addMessageListener((msg) => {\n    switch (msg.type) {\n      case 'turbopack-connected':\n        handleSocketConnected(sendMessage)\n        break\n      default:\n        try {\n          if (Array.isArray(msg.data)) {\n            for (let i = 0; i < msg.data.length; i++) {\n              handleSocketMessage(msg.data[i] as ServerMessage)\n            }\n          } else {\n            handleSocketMessage(msg.data as ServerMessage)\n          }\n          applyAggregatedUpdates()\n        } catch (e: unknown) {\n          console.warn(\n            '[Fast Refresh] performing full reload\\n\\n' +\n              \"Fast Refresh will perform a full reload when you edit a file that's imported by modules outside of the React rendering tree.\\n\" +\n              'You might have a file which exports a React component but also exports a value that is imported by a non-React component file.\\n' +\n              'Consider migrating the non-React component export to a separate file and importing it into both files.\\n\\n' +\n              'It is also possible the parent component of the component you edited is a class component, which disables Fast Refresh.\\n' +\n              'Fast Refresh requires at least one parent function component in your React tree.'\n          )\n          onUpdateError(e)\n          location.reload()\n        }\n        break\n    }\n  })\n\n  const queued = globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS\n  if (queued != null && !Array.isArray(queued)) {\n    throw new Error('A separate HMR handler was already registered')\n  }\n  globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS = {\n    push: ([chunkPath, callback]: [ChunkListPath, UpdateCallback]) => {\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback)\n    },\n  }\n\n  if (Array.isArray(queued)) {\n    for (const [chunkPath, callback] of queued) {\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback)\n    }\n  }\n}\n\ntype UpdateCallbackSet = {\n  callbacks: Set<UpdateCallback>\n  unsubscribe: () => void\n}\n\nconst updateCallbackSets: Map<ResourceKey, UpdateCallbackSet> = new Map()\n\nfunction sendJSON(sendMessage: SendMessage, message: ClientMessage) {\n  sendMessage(JSON.stringify(message))\n}\n\ntype ResourceKey = string\n\nfunction resourceKey(resource: ResourceIdentifier): ResourceKey {\n  return JSON.stringify({\n    path: resource.path,\n    headers: resource.headers || null,\n  })\n}\n\nfunction subscribeToUpdates(\n  sendMessage: SendMessage,\n  resource: ResourceIdentifier\n): () => void {\n  sendJSON(sendMessage, {\n    type: 'turbopack-subscribe',\n    ...resource,\n  })\n\n  return () => {\n    sendJSON(sendMessage, {\n      type: 'turbopack-unsubscribe',\n      ...resource,\n    })\n  }\n}\n\nfunction handleSocketConnected(sendMessage: SendMessage) {\n  for (const key of updateCallbackSets.keys()) {\n    subscribeToUpdates(sendMessage, JSON.parse(key))\n  }\n}\n\n// we aggregate all pending updates until the issues are resolved\nconst chunkListsWithPendingUpdates: Map<ResourceKey, PartialServerMessage> =\n  new Map()\n\nfunction aggregateUpdates(msg: PartialServerMessage) {\n  const key = resourceKey(msg.resource)\n  let aggregated = chunkListsWithPendingUpdates.get(key)\n\n  if (aggregated) {\n    aggregated.instruction = mergeChunkListUpdates(\n      aggregated.instruction,\n      msg.instruction\n    )\n  } else {\n    chunkListsWithPendingUpdates.set(key, msg)\n  }\n}\n\nfunction applyAggregatedUpdates() {\n  if (chunkListsWithPendingUpdates.size === 0) return\n  hooks.beforeRefresh()\n  for (const msg of chunkListsWithPendingUpdates.values()) {\n    triggerUpdate(msg)\n  }\n  chunkListsWithPendingUpdates.clear()\n  finalizeUpdate()\n}\n\nfunction mergeChunkListUpdates(\n  updateA: ChunkListUpdate,\n  updateB: ChunkListUpdate\n): ChunkListUpdate {\n  let chunks\n  if (updateA.chunks != null) {\n    if (updateB.chunks == null) {\n      chunks = updateA.chunks\n    } else {\n      chunks = mergeChunkListChunks(updateA.chunks, updateB.chunks)\n    }\n  } else if (updateB.chunks != null) {\n    chunks = updateB.chunks\n  }\n\n  let merged\n  if (updateA.merged != null) {\n    if (updateB.merged == null) {\n      merged = updateA.merged\n    } else {\n      // Since `merged` is an array of updates, we need to merge them all into\n      // one, consistent update.\n      // Since there can only be `EcmascriptMergeUpdates` in the array, there is\n      // no need to key on the `type` field.\n      let update = updateA.merged[0]\n      for (let i = 1; i < updateA.merged.length; i++) {\n        update = mergeChunkListEcmascriptMergedUpdates(\n          update,\n          updateA.merged[i]\n        )\n      }\n\n      for (let i = 0; i < updateB.merged.length; i++) {\n        update = mergeChunkListEcmascriptMergedUpdates(\n          update,\n          updateB.merged[i]\n        )\n      }\n\n      merged = [update]\n    }\n  } else if (updateB.merged != null) {\n    merged = updateB.merged\n  }\n\n  return {\n    type: 'ChunkListUpdate',\n    chunks,\n    merged,\n  }\n}\n\nfunction mergeChunkListChunks(\n  chunksA: Record<ChunkPath, ChunkUpdate>,\n  chunksB: Record<ChunkPath, ChunkUpdate>\n): Record<ChunkPath, ChunkUpdate> {\n  const chunks: Record<ChunkPath, ChunkUpdate> = {}\n\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA) as Array<\n    [ChunkPath, ChunkUpdate]\n  >) {\n    const chunkUpdateB = chunksB[chunkPath]\n    if (chunkUpdateB != null) {\n      const mergedUpdate = mergeChunkUpdates(chunkUpdateA, chunkUpdateB)\n      if (mergedUpdate != null) {\n        chunks[chunkPath] = mergedUpdate\n      }\n    } else {\n      chunks[chunkPath] = chunkUpdateA\n    }\n  }\n\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB) as Array<\n    [ChunkPath, ChunkUpdate]\n  >) {\n    if (chunks[chunkPath] == null) {\n      chunks[chunkPath] = chunkUpdateB\n    }\n  }\n\n  return chunks\n}\n\nfunction mergeChunkUpdates(\n  updateA: ChunkUpdate,\n  updateB: ChunkUpdate\n): ChunkUpdate | undefined {\n  if (\n    (updateA.type === 'added' && updateB.type === 'deleted') ||\n    (updateA.type === 'deleted' && updateB.type === 'added')\n  ) {\n    return undefined\n  }\n\n  if (updateA.type === 'partial') {\n    invariant(updateA.instruction, 'Partial updates are unsupported')\n  }\n\n  if (updateB.type === 'partial') {\n    invariant(updateB.instruction, 'Partial updates are unsupported')\n  }\n\n  return undefined\n}\n\nfunction mergeChunkListEcmascriptMergedUpdates(\n  mergedA: EcmascriptMergedUpdate,\n  mergedB: EcmascriptMergedUpdate\n): EcmascriptMergedUpdate {\n  const entries = mergeEcmascriptChunkEntries(mergedA.entries, mergedB.entries)\n  const chunks = mergeEcmascriptChunksUpdates(mergedA.chunks, mergedB.chunks)\n\n  return {\n    type: 'EcmascriptMergedUpdate',\n    entries,\n    chunks,\n  }\n}\n\nfunction mergeEcmascriptChunkEntries(\n  entriesA: Record<ModuleId, EcmascriptModuleEntry> | undefined,\n  entriesB: Record<ModuleId, EcmascriptModuleEntry> | undefined\n): Record<ModuleId, EcmascriptModuleEntry> {\n  return { ...entriesA, ...entriesB }\n}\n\nfunction mergeEcmascriptChunksUpdates(\n  chunksA: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined,\n  chunksB: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined\n): Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined {\n  if (chunksA == null) {\n    return chunksB\n  }\n\n  if (chunksB == null) {\n    return chunksA\n  }\n\n  const chunks: Record<ChunkPath, EcmascriptMergedChunkUpdate> = {}\n\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA) as Array<\n    [ChunkPath, EcmascriptMergedChunkUpdate]\n  >) {\n    const chunkUpdateB = chunksB[chunkPath]\n    if (chunkUpdateB != null) {\n      const mergedUpdate = mergeEcmascriptChunkUpdates(\n        chunkUpdateA,\n        chunkUpdateB\n      )\n      if (mergedUpdate != null) {\n        chunks[chunkPath] = mergedUpdate\n      }\n    } else {\n      chunks[chunkPath] = chunkUpdateA\n    }\n  }\n\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB) as Array<\n    [ChunkPath, EcmascriptMergedChunkUpdate]\n  >) {\n    if (chunks[chunkPath] == null) {\n      chunks[chunkPath] = chunkUpdateB\n    }\n  }\n\n  if (Object.keys(chunks).length === 0) {\n    return undefined\n  }\n\n  return chunks\n}\n\nfunction mergeEcmascriptChunkUpdates(\n  updateA: EcmascriptMergedChunkUpdate,\n  updateB: EcmascriptMergedChunkUpdate\n): EcmascriptMergedChunkUpdate | undefined {\n  if (updateA.type === 'added' && updateB.type === 'deleted') {\n    // These two completely cancel each other out.\n    return undefined\n  }\n\n  if (updateA.type === 'deleted' && updateB.type === 'added') {\n    const added = []\n    const deleted = []\n    const deletedModules = new Set(updateA.modules ?? [])\n    const addedModules = new Set(updateB.modules ?? [])\n\n    for (const moduleId of addedModules) {\n      if (!deletedModules.has(moduleId)) {\n        added.push(moduleId)\n      }\n    }\n\n    for (const moduleId of deletedModules) {\n      if (!addedModules.has(moduleId)) {\n        deleted.push(moduleId)\n      }\n    }\n\n    if (added.length === 0 && deleted.length === 0) {\n      return undefined\n    }\n\n    return {\n      type: 'partial',\n      added,\n      deleted,\n    }\n  }\n\n  if (updateA.type === 'partial' && updateB.type === 'partial') {\n    const added = new Set([...(updateA.added ?? []), ...(updateB.added ?? [])])\n    const deleted = new Set([\n      ...(updateA.deleted ?? []),\n      ...(updateB.deleted ?? []),\n    ])\n\n    if (updateB.added != null) {\n      for (const moduleId of updateB.added) {\n        deleted.delete(moduleId)\n      }\n    }\n\n    if (updateB.deleted != null) {\n      for (const moduleId of updateB.deleted) {\n        added.delete(moduleId)\n      }\n    }\n\n    return {\n      type: 'partial',\n      added: [...added],\n      deleted: [...deleted],\n    }\n  }\n\n  if (updateA.type === 'added' && updateB.type === 'partial') {\n    const modules = new Set([\n      ...(updateA.modules ?? []),\n      ...(updateB.added ?? []),\n    ])\n\n    for (const moduleId of updateB.deleted ?? []) {\n      modules.delete(moduleId)\n    }\n\n    return {\n      type: 'added',\n      modules: [...modules],\n    }\n  }\n\n  if (updateA.type === 'partial' && updateB.type === 'deleted') {\n    // We could eagerly return `updateB` here, but this would potentially be\n    // incorrect if `updateA` has added modules.\n\n    const modules = new Set(updateB.modules ?? [])\n\n    if (updateA.added != null) {\n      for (const moduleId of updateA.added) {\n        modules.delete(moduleId)\n      }\n    }\n\n    return {\n      type: 'deleted',\n      modules: [...modules],\n    }\n  }\n\n  // Any other update combination is invalid.\n\n  return undefined\n}\n\nfunction invariant(_: never, message: string): never {\n  throw new Error(`Invariant: ${message}`)\n}\n\nconst CRITICAL = ['bug', 'error', 'fatal']\n\nfunction compareByList(list: any[], a: any, b: any) {\n  const aI = list.indexOf(a) + 1 || list.length\n  const bI = list.indexOf(b) + 1 || list.length\n  return aI - bI\n}\n\nconst chunksWithIssues: Map<ResourceKey, Issue[]> = new Map()\n\nfunction emitIssues() {\n  const issues = []\n  const deduplicationSet = new Set()\n\n  for (const [_, chunkIssues] of chunksWithIssues) {\n    for (const chunkIssue of chunkIssues) {\n      if (deduplicationSet.has(chunkIssue.formatted)) continue\n\n      issues.push(chunkIssue)\n      deduplicationSet.add(chunkIssue.formatted)\n    }\n  }\n\n  sortIssues(issues)\n\n  hooks.issues(issues)\n}\n\nfunction handleIssues(msg: ServerMessage): boolean {\n  const key = resourceKey(msg.resource)\n  let hasCriticalIssues = false\n\n  for (const issue of msg.issues) {\n    if (CRITICAL.includes(issue.severity)) {\n      hasCriticalIssues = true\n    }\n  }\n\n  if (msg.issues.length > 0) {\n    chunksWithIssues.set(key, msg.issues)\n  } else if (chunksWithIssues.has(key)) {\n    chunksWithIssues.delete(key)\n  }\n\n  emitIssues()\n\n  return hasCriticalIssues\n}\n\nconst SEVERITY_ORDER = ['bug', 'fatal', 'error', 'warning', 'info', 'log']\nconst CATEGORY_ORDER = [\n  'parse',\n  'resolve',\n  'code generation',\n  'rendering',\n  'typescript',\n  'other',\n]\n\nfunction sortIssues(issues: Issue[]) {\n  issues.sort((a, b) => {\n    const first = compareByList(SEVERITY_ORDER, a.severity, b.severity)\n    if (first !== 0) return first\n    return compareByList(CATEGORY_ORDER, a.category, b.category)\n  })\n}\n\nconst hooks = {\n  beforeRefresh: () => {},\n  refresh: () => {},\n  buildOk: () => {},\n  issues: (_issues: Issue[]) => {},\n}\n\nexport function setHooks(newHooks: typeof hooks) {\n  Object.assign(hooks, newHooks)\n}\n\nfunction handleSocketMessage(msg: ServerMessage) {\n  sortIssues(msg.issues)\n\n  handleIssues(msg)\n\n  switch (msg.type) {\n    case 'issues':\n      // issues are already handled\n      break\n    case 'partial':\n      // aggregate updates\n      aggregateUpdates(msg)\n      break\n    default:\n      // run single update\n      const runHooks = chunkListsWithPendingUpdates.size === 0\n      if (runHooks) hooks.beforeRefresh()\n      triggerUpdate(msg)\n      if (runHooks) finalizeUpdate()\n      break\n  }\n}\n\nfunction finalizeUpdate() {\n  hooks.refresh()\n  hooks.buildOk()\n\n  // This is used by the Next.js integration test suite to notify it when HMR\n  // updates have been completed.\n  // TODO: Only run this in test environments (gate by `process.env.__NEXT_TEST_MODE`)\n  if (globalThis.__NEXT_HMR_CB) {\n    globalThis.__NEXT_HMR_CB()\n    globalThis.__NEXT_HMR_CB = null\n  }\n}\n\nfunction subscribeToChunkUpdate(\n  chunkListPath: ChunkListPath,\n  sendMessage: SendMessage,\n  callback: UpdateCallback\n): () => void {\n  return subscribeToUpdate(\n    {\n      path: chunkListPath,\n    },\n    sendMessage,\n    callback\n  )\n}\n\nexport function subscribeToUpdate(\n  resource: ResourceIdentifier,\n  sendMessage: SendMessage,\n  callback: UpdateCallback\n) {\n  const key = resourceKey(resource)\n  let callbackSet: UpdateCallbackSet\n  const existingCallbackSet = updateCallbackSets.get(key)\n  if (!existingCallbackSet) {\n    callbackSet = {\n      callbacks: new Set([callback]),\n      unsubscribe: subscribeToUpdates(sendMessage, resource),\n    }\n    updateCallbackSets.set(key, callbackSet)\n  } else {\n    existingCallbackSet.callbacks.add(callback)\n    callbackSet = existingCallbackSet\n  }\n\n  return () => {\n    callbackSet.callbacks.delete(callback)\n\n    if (callbackSet.callbacks.size === 0) {\n      callbackSet.unsubscribe()\n      updateCallbackSets.delete(key)\n    }\n  }\n}\n\nfunction triggerUpdate(msg: ServerMessage) {\n  const key = resourceKey(msg.resource)\n  const callbackSet = updateCallbackSets.get(key)\n  if (!callbackSet) {\n    return\n  }\n\n  for (const callback of callbackSet.callbacks) {\n    callback(msg)\n  }\n\n  if (msg.type === 'notFound') {\n    // This indicates that the resource which we subscribed to either does not exist or\n    // has been deleted. In either case, we should clear all update callbacks, so if a\n    // new subscription is created for the same resource, it will send a new \"subscribe\"\n    // message to the server.\n    // No need to send an \"unsubscribe\" message to the server, it will have already\n    // dropped the update stream before sending the \"notFound\" message.\n    updateCallbackSets.delete(key)\n  }\n}\n"],"names":[],"mappings":"AAAA,2DAA2D;AAC3D,4DAA4D;AAC5D,6DAA6D;AAC7D,6DAA6D;;;;;;;;;AAkBtD,SAAS,QAAQ,KAIR;QAJQ,EACtB,kBAAkB,EAClB,WAAW,EACX,gBAAgB,QAAQ,KAAK,EACf,GAJQ;IAKtB,mBAAmB,CAAC;QAClB,OAAQ,IAAI,IAAI;YACd,KAAK;gBACH,sBAAsB;gBACtB;YACF;gBACE,IAAI;oBACF,IAAI,MAAM,OAAO,CAAC,IAAI,IAAI,GAAG;wBAC3B,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE,IAAK;4BACxC,oBAAoB,IAAI,IAAI,CAAC,EAAE;wBACjC;oBACF,OAAO;wBACL,oBAAoB,IAAI,IAAI;oBAC9B;oBACA;gBACF,EAAE,OAAO,GAAY;oBACnB,QAAQ,IAAI,CACV,8CACE,mIACA,qIACA,+GACA,8HACA;oBAEJ,cAAc;oBACd,SAAS,MAAM;gBACjB;gBACA;QACJ;IACF;IAEA,MAAM,SAAS,WAAW,gCAAgC;IAC1D,IAAI,UAAU,QAAQ,CAAC,MAAM,OAAO,CAAC,SAAS;QAC5C,MAAM,IAAI,MAAM;IAClB;IACA,WAAW,gCAAgC,GAAG;QAC5C,MAAM;gBAAC,CAAC,WAAW,SAA0C;YAC3D,uBAAuB,WAAW,aAAa;QACjD;IACF;IAEA,IAAI,MAAM,OAAO,CAAC,SAAS;QACzB,KAAK,MAAM,CAAC,WAAW,SAAS,IAAI,OAAQ;YAC1C,uBAAuB,WAAW,aAAa;QACjD;IACF;AACF;AAOA,MAAM,qBAA0D,IAAI;AAEpE,SAAS,SAAS,WAAwB,EAAE,OAAsB;IAChE,YAAY,KAAK,SAAS,CAAC;AAC7B;AAIA,SAAS,YAAY,QAA4B;IAC/C,OAAO,KAAK,SAAS,CAAC;QACpB,MAAM,SAAS,IAAI;QACnB,SAAS,SAAS,OAAO,IAAI;IAC/B;AACF;AAEA,SAAS,mBACP,WAAwB,EACxB,QAA4B;IAE5B,SAAS,aAAa;QACpB,MAAM;QACN,GAAG,QAAQ;IACb;IAEA,OAAO;QACL,SAAS,aAAa;YACpB,MAAM;YACN,GAAG,QAAQ;QACb;IACF;AACF;AAEA,SAAS,sBAAsB,WAAwB;IACrD,KAAK,MAAM,OAAO,mBAAmB,IAAI,GAAI;QAC3C,mBAAmB,aAAa,KAAK,KAAK,CAAC;IAC7C;AACF;AAEA,iEAAiE;AACjE,MAAM,+BACJ,IAAI;AAEN,SAAS,iBAAiB,GAAyB;IACjD,MAAM,MAAM,YAAY,IAAI,QAAQ;IACpC,IAAI,aAAa,6BAA6B,GAAG,CAAC;IAElD,IAAI,YAAY;QACd,WAAW,WAAW,GAAG,sBACvB,WAAW,WAAW,EACtB,IAAI,WAAW;IAEnB,OAAO;QACL,6BAA6B,GAAG,CAAC,KAAK;IACxC;AACF;AAEA,SAAS;IACP,IAAI,6BAA6B,IAAI,KAAK,GAAG;IAC7C,MAAM,aAAa;IACnB,KAAK,MAAM,OAAO,6BAA6B,MAAM,GAAI;QACvD,cAAc;IAChB;IACA,6BAA6B,KAAK;IAClC;AACF;AAEA,SAAS,sBACP,OAAwB,EACxB,OAAwB;IAExB,IAAI;IACJ,IAAI,QAAQ,MAAM,IAAI,MAAM;QAC1B,IAAI,QAAQ,MAAM,IAAI,MAAM;YAC1B,SAAS,QAAQ,MAAM;QACzB,OAAO;YACL,SAAS,qBAAqB,QAAQ,MAAM,EAAE,QAAQ,MAAM;QAC9D;IACF,OAAO,IAAI,QAAQ,MAAM,IAAI,MAAM;QACjC,SAAS,QAAQ,MAAM;IACzB;IAEA,IAAI;IACJ,IAAI,QAAQ,MAAM,IAAI,MAAM;QAC1B,IAAI,QAAQ,MAAM,IAAI,MAAM;YAC1B,SAAS,QAAQ,MAAM;QACzB,OAAO;YACL,wEAAwE;YACxE,0BAA0B;YAC1B,0EAA0E;YAC1E,sCAAsC;YACtC,IAAI,SAAS,QAAQ,MAAM,CAAC,EAAE;YAC9B,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,MAAM,CAAC,MAAM,EAAE,IAAK;gBAC9C,SAAS,sCACP,QACA,QAAQ,MAAM,CAAC,EAAE;YAErB;YAEA,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,MAAM,CAAC,MAAM,EAAE,IAAK;gBAC9C,SAAS,sCACP,QACA,QAAQ,MAAM,CAAC,EAAE;YAErB;YAEA,SAAS;gBAAC;aAAO;QACnB;IACF,OAAO,IAAI,QAAQ,MAAM,IAAI,MAAM;QACjC,SAAS,QAAQ,MAAM;IACzB;IAEA,OAAO;QACL,MAAM;QACN;QACA;IACF;AACF;AAEA,SAAS,qBACP,OAAuC,EACvC,OAAuC;IAEvC,MAAM,SAAyC,CAAC;IAEhD,KAAK,MAAM,CAAC,WAAW,aAAa,IAAI,OAAO,OAAO,CAAC,SAEpD;QACD,MAAM,eAAe,OAAO,CAAC,UAAU;QACvC,IAAI,gBAAgB,MAAM;YACxB,MAAM,eAAe,kBAAkB,cAAc;YACrD,IAAI,gBAAgB,MAAM;gBACxB,MAAM,CAAC,UAAU,GAAG;YACtB;QACF,OAAO;YACL,MAAM,CAAC,UAAU,GAAG;QACtB;IACF;IAEA,KAAK,MAAM,CAAC,WAAW,aAAa,IAAI,OAAO,OAAO,CAAC,SAEpD;QACD,IAAI,MAAM,CAAC,UAAU,IAAI,MAAM;YAC7B,MAAM,CAAC,UAAU,GAAG;QACtB;IACF;IAEA,OAAO;AACT;AAEA,SAAS,kBACP,OAAoB,EACpB,OAAoB;IAEpB,IACE,AAAC,QAAQ,IAAI,KAAK,WAAW,QAAQ,IAAI,KAAK,aAC7C,QAAQ,IAAI,KAAK,aAAa,QAAQ,IAAI,KAAK,SAChD;QACA,OAAO;IACT;IAEA,IAAI,QAAQ,IAAI,KAAK,WAAW;QAC9B,UAAU,QAAQ,WAAW,EAAE;IACjC;IAEA,IAAI,QAAQ,IAAI,KAAK,WAAW;QAC9B,UAAU,QAAQ,WAAW,EAAE;IACjC;IAEA,OAAO;AACT;AAEA,SAAS,sCACP,OAA+B,EAC/B,OAA+B;IAE/B,MAAM,UAAU,4BAA4B,QAAQ,OAAO,EAAE,QAAQ,OAAO;IAC5E,MAAM,SAAS,6BAA6B,QAAQ,MAAM,EAAE,QAAQ,MAAM;IAE1E,OAAO;QACL,MAAM;QACN;QACA;IACF;AACF;AAEA,SAAS,4BACP,QAA6D,EAC7D,QAA6D;IAE7D,OAAO;QAAE,GAAG,QAAQ;QAAE,GAAG,QAAQ;IAAC;AACpC;AAEA,SAAS,6BACP,OAAmE,EACnE,OAAmE;IAEnE,IAAI,WAAW,MAAM;QACnB,OAAO;IACT;IAEA,IAAI,WAAW,MAAM;QACnB,OAAO;IACT;IAEA,MAAM,SAAyD,CAAC;IAEhE,KAAK,MAAM,CAAC,WAAW,aAAa,IAAI,OAAO,OAAO,CAAC,SAEpD;QACD,MAAM,eAAe,OAAO,CAAC,UAAU;QACvC,IAAI,gBAAgB,MAAM;YACxB,MAAM,eAAe,4BACnB,cACA;YAEF,IAAI,gBAAgB,MAAM;gBACxB,MAAM,CAAC,UAAU,GAAG;YACtB;QACF,OAAO;YACL,MAAM,CAAC,UAAU,GAAG;QACtB;IACF;IAEA,KAAK,MAAM,CAAC,WAAW,aAAa,IAAI,OAAO,OAAO,CAAC,SAEpD;QACD,IAAI,MAAM,CAAC,UAAU,IAAI,MAAM;YAC7B,MAAM,CAAC,UAAU,GAAG;QACtB;IACF;IAEA,IAAI,OAAO,IAAI,CAAC,QAAQ,MAAM,KAAK,GAAG;QACpC,OAAO;IACT;IAEA,OAAO;AACT;AAEA,SAAS,4BACP,OAAoC,EACpC,OAAoC;IAEpC,IAAI,QAAQ,IAAI,KAAK,WAAW,QAAQ,IAAI,KAAK,WAAW;QAC1D,8CAA8C;QAC9C,OAAO;IACT;IAEA,IAAI,QAAQ,IAAI,KAAK,aAAa,QAAQ,IAAI,KAAK,SAAS;QAC1D,MAAM,QAAQ,EAAE;QAChB,MAAM,UAAU,EAAE;YACa;QAA/B,MAAM,iBAAiB,IAAI,IAAI,CAAA,mBAAA,QAAQ,OAAO,cAAf,8BAAA,mBAAmB,EAAE;YACvB;QAA7B,MAAM,eAAe,IAAI,IAAI,CAAA,mBAAA,QAAQ,OAAO,cAAf,8BAAA,mBAAmB,EAAE;QAElD,KAAK,MAAM,YAAY,aAAc;YACnC,IAAI,CAAC,eAAe,GAAG,CAAC,WAAW;gBACjC,MAAM,IAAI,CAAC;YACb;QACF;QAEA,KAAK,MAAM,YAAY,eAAgB;YACrC,IAAI,CAAC,aAAa,GAAG,CAAC,WAAW;gBAC/B,QAAQ,IAAI,CAAC;YACf;QACF;QAEA,IAAI,MAAM,MAAM,KAAK,KAAK,QAAQ,MAAM,KAAK,GAAG;YAC9C,OAAO;QACT;QAEA,OAAO;YACL,MAAM;YACN;YACA;QACF;IACF;IAEA,IAAI,QAAQ,IAAI,KAAK,aAAa,QAAQ,IAAI,KAAK,WAAW;YACjC,gBAA0B;QAArD,MAAM,QAAQ,IAAI,IAAI;eAAK,CAAA,iBAAA,QAAQ,KAAK,cAAb,4BAAA,iBAAiB,EAAE;eAAO,CAAA,iBAAA,QAAQ,KAAK,cAAb,4BAAA,iBAAiB,EAAE;SAAE;YAEpE,kBACA;QAFN,MAAM,UAAU,IAAI,IAAI;eAClB,CAAA,mBAAA,QAAQ,OAAO,cAAf,8BAAA,mBAAmB,EAAE;eACrB,CAAA,mBAAA,QAAQ,OAAO,cAAf,8BAAA,mBAAmB,EAAE;SAC1B;QAED,IAAI,QAAQ,KAAK,IAAI,MAAM;YACzB,KAAK,MAAM,YAAY,QAAQ,KAAK,CAAE;gBACpC,QAAQ,MAAM,CAAC;YACjB;QACF;QAEA,IAAI,QAAQ,OAAO,IAAI,MAAM;YAC3B,KAAK,MAAM,YAAY,QAAQ,OAAO,CAAE;gBACtC,MAAM,MAAM,CAAC;YACf;QACF;QAEA,OAAO;YACL,MAAM;YACN,OAAO;mBAAI;aAAM;YACjB,SAAS;mBAAI;aAAQ;QACvB;IACF;IAEA,IAAI,QAAQ,IAAI,KAAK,WAAW,QAAQ,IAAI,KAAK,WAAW;YAEpD,mBACA;QAFN,MAAM,UAAU,IAAI,IAAI;eAClB,CAAA,oBAAA,QAAQ,OAAO,cAAf,+BAAA,oBAAmB,EAAE;eACrB,CAAA,kBAAA,QAAQ,KAAK,cAAb,6BAAA,kBAAiB,EAAE;SACxB;YAEsB;QAAvB,KAAK,MAAM,YAAY,CAAA,oBAAA,QAAQ,OAAO,cAAf,+BAAA,oBAAmB,EAAE,CAAE;YAC5C,QAAQ,MAAM,CAAC;QACjB;QAEA,OAAO;YACL,MAAM;YACN,SAAS;mBAAI;aAAQ;QACvB;IACF;IAEA,IAAI,QAAQ,IAAI,KAAK,aAAa,QAAQ,IAAI,KAAK,WAAW;YAIpC;QAHxB,wEAAwE;QACxE,4CAA4C;QAE5C,MAAM,UAAU,IAAI,IAAI,CAAA,oBAAA,QAAQ,OAAO,cAAf,+BAAA,oBAAmB,EAAE;QAE7C,IAAI,QAAQ,KAAK,IAAI,MAAM;YACzB,KAAK,MAAM,YAAY,QAAQ,KAAK,CAAE;gBACpC,QAAQ,MAAM,CAAC;YACjB;QACF;QAEA,OAAO;YACL,MAAM;YACN,SAAS;mBAAI;aAAQ;QACvB;IACF;IAEA,2CAA2C;IAE3C,OAAO;AACT;AAEA,SAAS,UAAU,CAAQ,EAAE,OAAe;IAC1C,MAAM,IAAI,MAAM,AAAC,cAAqB,OAAR;AAChC;AAEA,MAAM,WAAW;IAAC;IAAO;IAAS;CAAQ;AAE1C,SAAS,cAAc,IAAW,EAAE,CAAM,EAAE,CAAM;IAChD,MAAM,KAAK,KAAK,OAAO,CAAC,KAAK,KAAK,KAAK,MAAM;IAC7C,MAAM,KAAK,KAAK,OAAO,CAAC,KAAK,KAAK,KAAK,MAAM;IAC7C,OAAO,KAAK;AACd;AAEA,MAAM,mBAA8C,IAAI;AAExD,SAAS;IACP,MAAM,SAAS,EAAE;IACjB,MAAM,mBAAmB,IAAI;IAE7B,KAAK,MAAM,CAAC,GAAG,YAAY,IAAI,iBAAkB;QAC/C,KAAK,MAAM,cAAc,YAAa;YACpC,IAAI,iBAAiB,GAAG,CAAC,WAAW,SAAS,GAAG;YAEhD,OAAO,IAAI,CAAC;YACZ,iBAAiB,GAAG,CAAC,WAAW,SAAS;QAC3C;IACF;IAEA,WAAW;IAEX,MAAM,MAAM,CAAC;AACf;AAEA,SAAS,aAAa,GAAkB;IACtC,MAAM,MAAM,YAAY,IAAI,QAAQ;IACpC,IAAI,oBAAoB;IAExB,KAAK,MAAM,SAAS,IAAI,MAAM,CAAE;QAC9B,IAAI,SAAS,QAAQ,CAAC,MAAM,QAAQ,GAAG;YACrC,oBAAoB;QACtB;IACF;IAEA,IAAI,IAAI,MAAM,CAAC,MAAM,GAAG,GAAG;QACzB,iBAAiB,GAAG,CAAC,KAAK,IAAI,MAAM;IACtC,OAAO,IAAI,iBAAiB,GAAG,CAAC,MAAM;QACpC,iBAAiB,MAAM,CAAC;IAC1B;IAEA;IAEA,OAAO;AACT;AAEA,MAAM,iBAAiB;IAAC;IAAO;IAAS;IAAS;IAAW;IAAQ;CAAM;AAC1E,MAAM,iBAAiB;IACrB;IACA;IACA;IACA;IACA;IACA;CACD;AAED,SAAS,WAAW,MAAe;IACjC,OAAO,IAAI,CAAC,CAAC,GAAG;QACd,MAAM,QAAQ,cAAc,gBAAgB,EAAE,QAAQ,EAAE,EAAE,QAAQ;QAClE,IAAI,UAAU,GAAG,OAAO;QACxB,OAAO,cAAc,gBAAgB,EAAE,QAAQ,EAAE,EAAE,QAAQ;IAC7D;AACF;AAEA,MAAM,QAAQ;IACZ,eAAe,KAAO;IACtB,SAAS,KAAO;IAChB,SAAS,KAAO;IAChB,QAAQ,CAAC,WAAsB;AACjC;AAEO,SAAS,SAAS,QAAsB;IAC7C,OAAO,MAAM,CAAC,OAAO;AACvB;AAEA,SAAS,oBAAoB,GAAkB;IAC7C,WAAW,IAAI,MAAM;IAErB,aAAa;IAEb,OAAQ,IAAI,IAAI;QACd,KAAK;YAEH;QACF,KAAK;YACH,oBAAoB;YACpB,iBAAiB;YACjB;QACF;YACE,oBAAoB;YACpB,MAAM,WAAW,6BAA6B,IAAI,KAAK;YACvD,IAAI,UAAU,MAAM,aAAa;YACjC,cAAc;YACd,IAAI,UAAU;YACd;IACJ;AACF;AAEA,SAAS;IACP,MAAM,OAAO;IACb,MAAM,OAAO;IAEb,2EAA2E;IAC3E,+BAA+B;IAC/B,oFAAoF;IACpF,IAAI,WAAW,aAAa,EAAE;QAC5B,WAAW,aAAa;QACxB,WAAW,aAAa,GAAG;IAC7B;AACF;AAEA,SAAS,uBACP,aAA4B,EAC5B,WAAwB,EACxB,QAAwB;IAExB,OAAO,kBACL;QACE,MAAM;IACR,GACA,aACA;AAEJ;AAEO,SAAS,kBACd,QAA4B,EAC5B,WAAwB,EACxB,QAAwB;IAExB,MAAM,MAAM,YAAY;IACxB,IAAI;IACJ,MAAM,sBAAsB,mBAAmB,GAAG,CAAC;IACnD,IAAI,CAAC,qBAAqB;QACxB,cAAc;YACZ,WAAW,IAAI,IAAI;gBAAC;aAAS;YAC7B,aAAa,mBAAmB,aAAa;QAC/C;QACA,mBAAmB,GAAG,CAAC,KAAK;IAC9B,OAAO;QACL,oBAAoB,SAAS,CAAC,GAAG,CAAC;QAClC,cAAc;IAChB;IAEA,OAAO;QACL,YAAY,SAAS,CAAC,MAAM,CAAC;QAE7B,IAAI,YAAY,SAAS,CAAC,IAAI,KAAK,GAAG;YACpC,YAAY,WAAW;YACvB,mBAAmB,MAAM,CAAC;QAC5B;IACF;AACF;AAEA,SAAS,cAAc,GAAkB;IACvC,MAAM,MAAM,YAAY,IAAI,QAAQ;IACpC,MAAM,cAAc,mBAAmB,GAAG,CAAC;IAC3C,IAAI,CAAC,aAAa;QAChB;IACF;IAEA,KAAK,MAAM,YAAY,YAAY,SAAS,CAAE;QAC5C,SAAS;IACX;IAEA,IAAI,IAAI,IAAI,KAAK,YAAY;QAC3B,mFAAmF;QACnF,kFAAkF;QAClF,oFAAoF;QACpF,yBAAyB;QACzB,+EAA+E;QAC/E,mEAAmE;QACnE,mBAAmB,MAAM,CAAC;IAC5B;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 476, "column": 0}, "map": {"version":3,"sources":["file:///Users/hirapro_tokyo/Desktop/SMS%E8%AA%8D%E8%A8%BC/my-app/analyst/pages/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Send, CheckCircle, AlertCircle, Loader } from \"lucide-react\";\n\nexport default function SMSAuthForm() {\n  const [step, setStep] = useState(1);\n  const [userInfo, setUserInfo] = useState({\n    name: \"\",\n    phone: \"\",\n  });\n  const [verificationCode, setVerificationCode] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n  const [canResend, setCanResend] = useState(true);\n  const [countdown, setCountdown] = useState(0);\n  const [uid, setUid] = useState(\"\");\n\n  // URLパラメータからuidを取得\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const uidParam = urlParams.get(\"uid\");\n    if (uidParam) {\n      setUid(uidParam);\n      console.log(\"プロライン UID:\", uidParam);\n    }\n  }, []);\n\n  const handleSendSMS = async () => {\n    setError(\"\");\n\n    if (!userInfo.name.trim()) {\n      setError(\"お名前を入力してください\");\n      return;\n    }\n\n    if (!userInfo.phone.trim()) {\n      setError(\"電話番号を入力してください\");\n      return;\n    }\n\n    setLoading(true);\n\n    const cleanPhone = userInfo.phone.replace(/[-\\s+]/g, \"\");\n    const phoneRegex = /^(0[0-9]{9,10}|81[0-9]{9,10})$/;\n    if (!phoneRegex.test(cleanPhone)) {\n      setError(\"正しい電話番号を入力してください\");\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const response = await fetch(\"/api/send-sms\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ phone: userInfo.phone }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setStep(2);\n        setCanResend(false);\n        startCountdown();\n      } else {\n        setError(data.error || \"SMS送信に失敗しました\");\n      }\n    } catch (err) {\n      setError(\"通信エラーが発生しました\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const startCountdown = () => {\n    setCountdown(60);\n    const timer = setInterval(() => {\n      setCountdown((prev) => {\n        if (prev <= 1) {\n          clearInterval(timer);\n          setCanResend(true);\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n  };\n\n  const handleVerifyCode = async () => {\n    setError(\"\");\n\n    if (verificationCode.length !== 6) {\n      setError(\"6桁の認証コードを入力してください\");\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      const response = await fetch(\"/api/verify-code\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          phone: userInfo.phone,\n          code: verificationCode,\n        }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setStep(3);\n        await submitForm(data.token);\n      } else {\n        setError(data.error || \"認証コードが正しくありません\");\n      }\n    } catch (err) {\n      setError(\"通信エラーが発生しました\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const submitForm = async (token) => {\n    try {\n      // 1. プロラインのフォームに送信\n      console.log(\"📤 プロラインフォームに送信中...\");\n      const prolineSuccess = await submitToProline();\n\n      if (!prolineSuccess) {\n        setError(\"プロラインへの送信に失敗しました\");\n        return;\n      }\n\n      // 2. メール送信\n      const response = await fetch(\"/api/submit-form\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          name: userInfo.name,\n          phone: userInfo.phone,\n          token: token,\n          diagnosisType: \"\",\n          uid: uid,\n        }),\n      });\n\n      if (response.ok) {\n        setSuccess(true);\n\n        // 3. プロラインのシナリオ移動を発火\n        if (uid) {\n          fireProlineBeacon(uid);\n        }\n      } else {\n        setError(\"メール送信に失敗しました\");\n      }\n    } catch (err) {\n      console.error(\"送信エラー:\", err);\n      setError(\"送信エラーが発生しました\");\n    }\n  };\n\n  // プロラインのフォームに送信する関数\n  const submitToProline = async () => {\n    try {\n      const formData = new FormData();\n      formData.append(\"uid\", uid || \"\");\n      formData.append(\"txt[WEBXn9xZwh]\", userInfo.name);\n      formData.append(\"txt[IeWqkHLxV0]\", userInfo.phone);\n\n      const response = await fetch(\n        \"https://u28edw94.autosns.app/fm/WJm3eVNBtb\",\n        {\n          method: \"POST\",\n          body: formData,\n          mode: \"no-cors\",\n        }\n      );\n\n      console.log(\"✅ プロラインフォーム送信完了\");\n      return true;\n    } catch (error) {\n      console.error(\"❌ プロラインフォーム送信エラー:\", error);\n      return false;\n    }\n  };\n\n  // // プロラインのビーコン発火関数\n  // const fireProlineBeacon = (userId) => {\n  //   console.log(\"🚀 プロラインシナリオ移動を実行:\", userId);\n\n  //   const img = document.createElement(\"img\");\n  //   img.src = `https://autosns.jp/api/call-beacon/y1mMjPcyJx/${userId}`;\n  //   img.style.display = \"none\";\n  //   img.onload = () => {\n  //     console.log(\"✅ プロラインシナリオ移動成功\");\n  //   };\n  //   img.onerror = () => {\n  //     console.error(\"❌ プロラインシナリオ移動失敗\");\n  //   };\n  //   document.body.appendChild(img);\n  // };\n\n  // const handleResend = () => {\n  //   handleSendSMS();\n  // };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-12 px-4\">\n      <div className=\"max-w-md mx-auto\">\n        <div className=\"bg-white rounded-2xl shadow-xl p-8\">\n          <div className=\"text-center mb-8\">\n            <h1 className=\"text-2xl font-bold text-gray-800 mb-2\">\n              診断結果をお届けします\n            </h1>\n            <p className=\"text-gray-600\">\n              診断結果の完全版をお届けするため、ご本人様確認を行います。\n            </p>\n            <p className=\"text-gray-600\">\n              【氏名】【電話番号】をご入力いただくと、SMSで認証コードが届きます。\n            </p>\n          </div>\n          <div className=\"flex items-center justify-center mb-8\">\n            <div className=\"flex items-center space-x-2\">\n              <div\n                className={`w-8 h-8 rounded-full flex items-center justify-center ${\n                  step >= 1\n                    ? \"bg-indigo-600 text-white\"\n                    : \"bg-gray-200 text-gray-500\"\n                }`}\n              >\n                1\n              </div>\n              <div\n                className={`w-12 h-1 ${\n                  step >= 2 ? \"bg-indigo-600\" : \"bg-gray-200\"\n                }`}\n              ></div>\n              <div\n                className={`w-8 h-8 rounded-full flex items-center justify-center ${\n                  step >= 2\n                    ? \"bg-indigo-600 text-white\"\n                    : \"bg-gray-200 text-gray-500\"\n                }`}\n              >\n                2\n              </div>\n              <div\n                className={`w-12 h-1 ${\n                  step >= 3 ? \"bg-indigo-600\" : \"bg-gray-200\"\n                }`}\n              ></div>\n              <div\n                className={`w-8 h-8 rounded-full flex items-center justify-center ${\n                  step >= 3\n                    ? \"bg-indigo-600 text-white\"\n                    : \"bg-gray-200 text-gray-500\"\n                }`}\n              >\n                3\n              </div>\n            </div>\n          </div>\n\n          {error && (\n            <div className=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-lg flex items-start\">\n              <AlertCircle className=\"w-5 h-5 text-red-500 mr-2 flex-shrink-0 mt-0.5\" />\n              <p className=\"text-red-700 text-sm\">{error}</p>\n            </div>\n          )}\n\n          {success ? (\n            <div className=\"text-center py-8\">\n              <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <CheckCircle className=\"w-10 h-10 text-green-600\" />\n              </div>\n              <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">\n                送信完了！\n              </h2>\n              <p className=\"text-gray-600 mb-4\">認証が完了しました。</p>\n              <div className=\"bg-green-50 border border-green-200 rounded-lg p-4 mb-4\">\n                <p className=\"text-green-800 font-semibold mb-2\">\n                  📱 LINEに戻ってください\n                </p>\n                <p className=\"text-sm text-green-700\">\n                  診断結果の完全版がLINEに届いています。\n                  <br />\n                  LINEアプリを開いてご確認ください。\n                </p>\n              </div>\n            </div>\n          ) : (\n            <>\n              {step === 1 && (\n                <div>\n                  <div className=\"space-y-6\">\n                    <p className=\"text-gray-600 text-sm mb-4\">\n                      下記フォームに【氏名】【電話番号】をご入力ください。\n                      <br />\n                      ご本人様確認のため、SMSで認証コードをお送りします。\n                      <br />\n                      認証完了後、すぐに診断結果の完全版をお届けします。\n                    </p>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        お名前 <span className=\"text-red-500\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={userInfo.name}\n                        onChange={(e) =>\n                          setUserInfo({ ...userInfo, name: e.target.value })\n                        }\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent\"\n                        placeholder=\"例）山田太郎\"\n                      />\n                      <p className=\"mt-1 text-xs text-gray-500\">\n                        ※スペースなしでご入力ください。\n                      </p>\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        電話番号 <span className=\"text-red-500\">*</span>\n                      </label>\n                      <input\n                        type=\"tel\"\n                        value={userInfo.phone}\n                        onChange={(e) =>\n                          setUserInfo({ ...userInfo, phone: e.target.value })\n                        }\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent\"\n                        placeholder=\"例）090-1234-5678\"\n                      />\n                      <p className=\"mt-1 text-xs text-gray-500\">\n                        ハイフンあり・なしどちらでもOK\n                      </p>\n                    </div>\n\n                    <button\n                      onClick={handleSendSMS}\n                      disabled={loading}\n                      className=\"w-full bg-indigo-600 text-white py-3 rounded-lg font-semibold hover:bg-indigo-700 transition disabled:bg-gray-400 disabled:cursor-not-allowed flex items-center justify-center\"\n                    >\n                      {loading ? (\n                        <Loader className=\"w-5 h-5 animate-spin\" />\n                      ) : (\n                        <>\n                          <Send className=\"w-5 h-5 mr-2\" />\n                          認証コードを送信\n                        </>\n                      )}\n                    </button>\n                  </div>\n                </div>\n              )}\n\n              {step === 2 && (\n                <div>\n                  <div className=\"space-y-6\">\n                    <div className=\"text-center mb-6\">\n                      <p className=\"text-gray-600\">\n                        <span className=\"font-semibold\">{userInfo.phone}</span>{\" \"}\n                        宛に\n                        <br />\n                        6桁の認証コードを送信しました\n                      </p>\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        認証コード <span className=\"text-red-500\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        maxLength=\"6\"\n                        value={verificationCode}\n                        onChange={(e) =>\n                          setVerificationCode(e.target.value.replace(/\\D/g, \"\"))\n                        }\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-lg text-center text-2xl font-bold tracking-widest focus:ring-2 focus:ring-indigo-500 focus:border-transparent\"\n                        placeholder=\"000000\"\n                      />\n                      <p className=\"mt-2 text-xs text-gray-500 text-center\">\n                        コードの有効期限は10分です\n                      </p>\n                    </div>\n\n                    <button\n                      onClick={handleVerifyCode}\n                      disabled={loading || verificationCode.length !== 6}\n                      className=\"w-full bg-indigo-600 text-white py-3 rounded-lg font-semibold hover:bg-indigo-700 transition disabled:bg-gray-400 disabled:cursor-not-allowed flex items-center justify-center\"\n                    >\n                      {loading ? (\n                        <Loader className=\"w-5 h-5 animate-spin\" />\n                      ) : (\n                        <>\n                          <CheckCircle className=\"w-5 h-5 mr-2\" />\n                          認証して送信\n                        </>\n                      )}\n                    </button>\n\n                    <div className=\"text-center\">\n                      {!canResend ? (\n                        <p className=\"text-sm text-gray-500\">\n                          再送信まであと {countdown} 秒\n                        </p>\n                      ) : (\n                        <button\n                          onClick={handleResend}\n                          className=\"text-sm text-indigo-600 hover:text-indigo-800 underline\"\n                        >\n                          コードを再送信\n                        </button>\n                      )}\n                    </div>\n\n                    <button\n                      onClick={() => setStep(1)}\n                      className=\"w-full text-gray-600 py-2 text-sm hover:text-gray-800\"\n                    >\n                      ← 電話番号を変更する\n                    </button>\n                  </div>\n                </div>\n              )}\n            </>\n          )}\n\n          <div className=\"mt-8 pt-6 border-t border-gray-200\">\n            <p className=\"text-xs text-gray-500 text-center\">\n              🔒 入力された情報はデータベースに保存されず、\n              <br />\n              処理完了後に自動的に削除されます\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAAA;AAAA;AAAA;;;;;AAEe,SAAS;;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,sIAAQ,EAAC;IACjC,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,sIAAQ,EAAC;QACvC,MAAM;QACN,OAAO;IACT;IACA,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,IAAA,sIAAQ,EAAC;IACzD,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,sIAAQ,EAAC;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,sIAAQ,EAAC;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,sIAAQ,EAAC;IACvC,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,sIAAQ,EAAC;IAC3C,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,sIAAQ,EAAC;IAC3C,MAAM,CAAC,KAAK,OAAO,GAAG,IAAA,sIAAQ,EAAC;IAE/B,mBAAmB;IACnB,IAAA,uIAAS;iCAAC;YACR,MAAM,YAAY,IAAI,gBAAgB,OAAO,QAAQ,CAAC,MAAM;YAC5D,MAAM,WAAW,UAAU,GAAG,CAAC;YAC/B,IAAI,UAAU;gBACZ,OAAO;gBACP,QAAQ,GAAG,CAAC,cAAc;YAC5B;QACF;gCAAG,EAAE;IAEL,MAAM,gBAAgB;QACpB,SAAS;QAET,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,IAAI;YACzB,SAAS;YACT;QACF;QAEA,IAAI,CAAC,SAAS,KAAK,CAAC,IAAI,IAAI;YAC1B,SAAS;YACT;QACF;QAEA,WAAW;QAEX,MAAM,aAAa,SAAS,KAAK,CAAC,OAAO,CAAC,WAAW;QACrD,MAAM,aAAa;QACnB,IAAI,CAAC,WAAW,IAAI,CAAC,aAAa;YAChC,SAAS;YACT,WAAW;YACX;QACF;QAEA,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,iBAAiB;gBAC5C,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBAAE,OAAO,SAAS,KAAK;gBAAC;YAC/C;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,IAAI,SAAS,EAAE,EAAE;gBACf,QAAQ;gBACR,aAAa;gBACb;YACF,OAAO;gBACL,SAAS,KAAK,KAAK,IAAI;YACzB;QACF,EAAE,OAAO,KAAK;YACZ,SAAS;QACX,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,iBAAiB;QACrB,aAAa;QACb,MAAM,QAAQ,YAAY;YACxB,aAAa,CAAC;gBACZ,IAAI,QAAQ,GAAG;oBACb,cAAc;oBACd,aAAa;oBACb,OAAO;gBACT;gBACA,OAAO,OAAO;YAChB;QACF,GAAG;IACL;IAEA,MAAM,mBAAmB;QACvB,SAAS;QAET,IAAI,iBAAiB,MAAM,KAAK,GAAG;YACjC,SAAS;YACT;QACF;QAEA,WAAW;QAEX,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,oBAAoB;gBAC/C,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBACnB,OAAO,SAAS,KAAK;oBACrB,MAAM;gBACR;YACF;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,IAAI,SAAS,EAAE,EAAE;gBACf,QAAQ;gBACR,MAAM,WAAW,KAAK,KAAK;YAC7B,OAAO;gBACL,SAAS,KAAK,KAAK,IAAI;YACzB;QACF,EAAE,OAAO,KAAK;YACZ,SAAS;QACX,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,aAAa,OAAO;QACxB,IAAI;YACF,mBAAmB;YACnB,QAAQ,GAAG,CAAC;YACZ,MAAM,iBAAiB,MAAM;YAE7B,IAAI,CAAC,gBAAgB;gBACnB,SAAS;gBACT;YACF;YAEA,WAAW;YACX,MAAM,WAAW,MAAM,MAAM,oBAAoB;gBAC/C,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBACnB,MAAM,SAAS,IAAI;oBACnB,OAAO,SAAS,KAAK;oBACrB,OAAO;oBACP,eAAe;oBACf,KAAK;gBACP;YACF;YAEA,IAAI,SAAS,EAAE,EAAE;gBACf,WAAW;gBAEX,qBAAqB;gBACrB,IAAI,KAAK;oBACP,kBAAkB;gBACpB;YACF,OAAO;gBACL,SAAS;YACX;QACF,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,UAAU;YACxB,SAAS;QACX;IACF;IAEA,oBAAoB;IACpB,MAAM,kBAAkB;QACtB,IAAI;YACF,MAAM,WAAW,IAAI;YACrB,SAAS,MAAM,CAAC,OAAO,OAAO;YAC9B,SAAS,MAAM,CAAC,mBAAmB,SAAS,IAAI;YAChD,SAAS,MAAM,CAAC,mBAAmB,SAAS,KAAK;YAEjD,MAAM,WAAW,MAAM,MACrB,8CACA;gBACE,QAAQ;gBACR,MAAM;gBACN,MAAM;YACR;YAGF,QAAQ,GAAG,CAAC;YACZ,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,qBAAqB;YACnC,OAAO;QACT;IACF;IAEA,oBAAoB;IACpB,0CAA0C;IAC1C,+CAA+C;IAE/C,+CAA+C;IAC/C,yEAAyE;IACzE,gCAAgC;IAChC,yBAAyB;IACzB,sCAAsC;IACtC,OAAO;IACP,0BAA0B;IAC1B,wCAAwC;IACxC,OAAO;IACP,oCAAoC;IACpC,KAAK;IAEL,+BAA+B;IAC/B,qBAAqB;IACrB,KAAK;IAEL,qBACE,0JAAC;QAAI,WAAU;kBACb,cAAA,0JAAC;YAAI,WAAU;sBACb,cAAA,0JAAC;gBAAI,WAAU;;kCACb,0JAAC;wBAAI,WAAU;;0CACb,0JAAC;gCAAG,WAAU;0CAAwC;;;;;;0CAGtD,0JAAC;gCAAE,WAAU;0CAAgB;;;;;;0CAG7B,0JAAC;gCAAE,WAAU;0CAAgB;;;;;;;;;;;;kCAI/B,0JAAC;wBAAI,WAAU;kCACb,cAAA,0JAAC;4BAAI,WAAU;;8CACb,0JAAC;oCACC,WAAW,AAAC,yDAIX,OAHC,QAAQ,IACJ,6BACA;8CAEP;;;;;;8CAGD,0JAAC;oCACC,WAAW,AAAC,YAEX,OADC,QAAQ,IAAI,kBAAkB;;;;;;8CAGlC,0JAAC;oCACC,WAAW,AAAC,yDAIX,OAHC,QAAQ,IACJ,6BACA;8CAEP;;;;;;8CAGD,0JAAC;oCACC,WAAW,AAAC,YAEX,OADC,QAAQ,IAAI,kBAAkB;;;;;;8CAGlC,0JAAC;oCACC,WAAW,AAAC,yDAIX,OAHC,QAAQ,IACJ,6BACA;8CAEP;;;;;;;;;;;;;;;;;oBAMJ,uBACC,0JAAC;wBAAI,WAAU;;0CACb,0JAAC,+NAAW;gCAAC,WAAU;;;;;;0CACvB,0JAAC;gCAAE,WAAU;0CAAwB;;;;;;;;;;;;oBAIxC,wBACC,0JAAC;wBAAI,WAAU;;0CACb,0JAAC;gCAAI,WAAU;0CACb,cAAA,0JAAC,sOAAW;oCAAC,WAAU;;;;;;;;;;;0CAEzB,0JAAC;gCAAG,WAAU;0CAAwC;;;;;;0CAGtD,0JAAC;gCAAE,WAAU;0CAAqB;;;;;;0CAClC,0JAAC;gCAAI,WAAU;;kDACb,0JAAC;wCAAE,WAAU;kDAAoC;;;;;;kDAGjD,0JAAC;wCAAE,WAAU;;4CAAyB;0DAEpC,0JAAC;;;;;4CAAK;;;;;;;;;;;;;;;;;;6CAMZ;;4BACG,SAAS,mBACR,0JAAC;0CACC,cAAA,0JAAC;oCAAI,WAAU;;sDACb,0JAAC;4CAAE,WAAU;;gDAA6B;8DAExC,0JAAC;;;;;gDAAK;8DAEN,0JAAC;;;;;gDAAK;;;;;;;sDAIR,0JAAC;;8DACC,0JAAC;oDAAM,WAAU;;wDAA+C;sEAC1D,0JAAC;4DAAK,WAAU;sEAAe;;;;;;;;;;;;8DAErC,0JAAC;oDACC,MAAK;oDACL,OAAO,SAAS,IAAI;oDACpB,UAAU,CAAC,IACT,YAAY;4DAAE,GAAG,QAAQ;4DAAE,MAAM,EAAE,MAAM,CAAC,KAAK;wDAAC;oDAElD,WAAU;oDACV,aAAY;;;;;;8DAEd,0JAAC;oDAAE,WAAU;8DAA6B;;;;;;;;;;;;sDAK5C,0JAAC;;8DACC,0JAAC;oDAAM,WAAU;;wDAA+C;sEACzD,0JAAC;4DAAK,WAAU;sEAAe;;;;;;;;;;;;8DAEtC,0JAAC;oDACC,MAAK;oDACL,OAAO,SAAS,KAAK;oDACrB,UAAU,CAAC,IACT,YAAY;4DAAE,GAAG,QAAQ;4DAAE,OAAO,EAAE,MAAM,CAAC,KAAK;wDAAC;oDAEnD,WAAU;oDACV,aAAY;;;;;;8DAEd,0JAAC;oDAAE,WAAU;8DAA6B;;;;;;;;;;;;sDAK5C,0JAAC;4CACC,SAAS;4CACT,UAAU;4CACV,WAAU;sDAET,wBACC,0JAAC,4MAAM;gDAAC,WAAU;;;;;qEAElB;;kEACE,0JAAC,sMAAI;wDAAC,WAAU;;;;;;oDAAiB;;;;;;;;;;;;;;;;;;;4BAS5C,SAAS,mBACR,0JAAC;0CACC,cAAA,0JAAC;oCAAI,WAAU;;sDACb,0JAAC;4CAAI,WAAU;sDACb,cAAA,0JAAC;gDAAE,WAAU;;kEACX,0JAAC;wDAAK,WAAU;kEAAiB,SAAS,KAAK;;;;;;oDAAS;oDAAI;kEAE5D,0JAAC;;;;;oDAAK;;;;;;;;;;;;sDAKV,0JAAC;;8DACC,0JAAC;oDAAM,WAAU;;wDAA+C;sEACxD,0JAAC;4DAAK,WAAU;sEAAe;;;;;;;;;;;;8DAEvC,0JAAC;oDACC,MAAK;oDACL,WAAU;oDACV,OAAO;oDACP,UAAU,CAAC,IACT,oBAAoB,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO;oDAEpD,WAAU;oDACV,aAAY;;;;;;8DAEd,0JAAC;oDAAE,WAAU;8DAAyC;;;;;;;;;;;;sDAKxD,0JAAC;4CACC,SAAS;4CACT,UAAU,WAAW,iBAAiB,MAAM,KAAK;4CACjD,WAAU;sDAET,wBACC,0JAAC,4MAAM;gDAAC,WAAU;;;;;qEAElB;;kEACE,0JAAC,sOAAW;wDAAC,WAAU;;;;;;oDAAiB;;;;;;;;sDAM9C,0JAAC;4CAAI,WAAU;sDACZ,CAAC,0BACA,0JAAC;gDAAE,WAAU;;oDAAwB;oDAC1B;oDAAU;;;;;;qEAGrB,0JAAC;gDACC,SAAS;gDACT,WAAU;0DACX;;;;;;;;;;;sDAML,0JAAC;4CACC,SAAS,IAAM,QAAQ;4CACvB,WAAU;sDACX;;;;;;;;;;;;;;;;;;;kCASX,0JAAC;wBAAI,WAAU;kCACb,cAAA,0JAAC;4BAAE,WAAU;;gCAAoC;8CAE/C,0JAAC;;;;;gCAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQpB;GAvbwB;KAAA","debugId":null}},
    {"offset": {"line": 1233, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/entry/page-loader.ts"],"sourcesContent":["const PAGE_PATH = \"/\";\n\n/// <reference types=\"next/client\" />\n\n// inserted by rust code\ndeclare const PAGE_PATH: string\n\n  // Adapted from https://github.com/vercel/next.js/blob/b7f9f1f98fc8ab602e84825105b5727272b72e7d/packages/next/src/build/webpack/loaders/next-client-pages-loader.ts\n;(window.__NEXT_P = window.__NEXT_P || []).push([\n  PAGE_PATH,\n  () => {\n    return require('PAGE')\n  },\n])\n// @ts-expect-error module.hot exists\nif (module.hot) {\n  // @ts-expect-error module.hot exists\n  module.hot.dispose(function () {\n    window.__NEXT_P.push([PAGE_PATH])\n  })\n}\n"],"names":[],"mappings":"AAAA,MAAM,YAAY;AAQjB,CAAC,OAAO,QAAQ,GAAG,OAAO,QAAQ,IAAI,EAAE,EAAE,IAAI,CAAC;IAC9C;IACA;QACE;IACF;CACD;AACD,qCAAqC;AACrC,IAAI,OAAO,GAAG,EAAE;IACd,qCAAqC;IACrC,OAAO,GAAG,CAAC,OAAO,CAAC;QACjB,OAAO,QAAQ,CAAC,IAAI,CAAC;YAAC;SAAU;IAClC;AACF","ignoreList":[0],"debugId":null}}]
}